;****************************************
; Blower
; 1996-2022
; Amiga version
; Author: Youen CHENE
;
; Palette :
;  1-2 World (Ground - Non Blocking)
;  3-4 World (Wall - Blocking)
;  4-16 Player
;  17-19 Bullets
;  20 Player
;  21-23 Bullets
;  24 Player
;  25-27 Flam Thrower
;  28 Player
;  29-31 Flam Thrower
;
; Shape :
;  0 Buffer shape for GetaSprite
;  1-4 World1
;  11-14 World2
;  21-24 World3
;  26-30 HUD - Player
;  31-34 World4
;  36-38 HUD - Avatar
;  50-90 Avatar 1
;  100-140 Avatar 2
;  150-190 Avatar 3
;  100-140 Avatar 4
;****************************************

;Maximum Shapes

WBStartup

Amiga

#mapWidth=20
#mapHeight=14
#mapSize=280
#initAnimCount=2
#endAnimCount=8
#bulletPerPlayer=2
#waitBullet=30
#speedBullet=3
#maxEnergy=15;

#ShapeIndexHUDAvatar=36
#ShapeIndexHUDPlayer=27

#wallColor1=3
#wallColor2=4
#avatarColor1=5
#avatarColor2=31

#energyBulletImpact=1
#shotAnim=6

currentWorld.b=4

NEWTYPE .Level
  map.b[#mapSize]
End NEWTYPE 

NEWTYPE .Player
  x.w
  y.w
  dead.b
  direction.b
  animIndex.b
  frameAnim.b
  frameCounter.b
  stepsize.b
  bullets.b
  waitBullet.b
  joy.b
  avatar.b
  energy.b
  previousEnergy.b
  shot.b
End NEWTYPE 

NEWTYPE .Bullet
  x.w
  x1.w
  x2.w
  y.w
  y1.w
  y2.w
  direction.b
  animIndex.b
  speed.b
  player.b
  init.b
  endLife.b
  channel.b
  srcAvatar.b
End NEWTYPE 

Statement PaletteWorld{n}
  Select n
    Case 1
      PalRGB 1,1,15,12,6  
      PalRGB 1,2,9,6,1  
      PalRGB 1,3,0,15,3  
      PalRGB 1,4,12,12,12  
    Case 3
      PalRGB 1,1,0,15,3  
      PalRGB 1,2,15,12,6  
      PalRGB 1,3,9,3,0  
      PalRGB 1,4,0,6,3  
    Case 4  
      PalRGB 1,1,9,9,9  
      PalRGB 1,2,6,6,6  
      PalRGB 1,3,12,9,6  
      PalRGB 1,4,9,6,0   
    Default ;also case 2
      PalRGB 1,1,0,6,6  
      PalRGB 1,2,0,6,12  
      PalRGB 1,3,5,5,5  
      PalRGB 1,4,9,9,9  
  End Select  
End Statement


; Intro @ Loading - Micrix Production

flags3.l = $02
InitCopList 0,44,256,flags3,8,4,0

VWAIT 50
Blitz
CreateDisplay 0
InitPalette 3,4
InitPalette 4,4
PalRGB 3,0,0,0,0
PalRGB 3,1,6,0,9
PalRGB 3,2,14,13,15
PalRGB 3,3,3,0,6
DisplayPalette 0,3
Bitmap 7, 320, 256, 2

Use BitMap 7

BitMapOutput 7 
Colour 1,0
Locate 11,12
NPrint "Micrix Production"
Locate 0,14
Colour 3,0

DisplayPalette 0, 4
DisplayBitMap 0, 7

For i.b = 0 to 50
  FadePalette 3, 4, i / 50
  DisplayPalette 0, 4
  VWAIT
Next

for xp.w = 0 to 67
  Plot 88+xp*2,104,2
  VWAIT
  Plot 88+xp*2,104,0
next
VWAIT 2
Plot 222,96,2
VWAIT 2
Plot 222,96,0
Plot 221,96,2
Plot 223,96,2
Plot 222,95,2
Plot 222,97,2
VWAIT 2
Plot 221,96,0
Plot 223,96,0
Plot 222,95,0
Plot 222,97,0
Plot 220,96,2
Plot 224,96,2
Plot 222,94,2
Plot 222,98,2
VWAIT 12
Plot 220,96,3
Plot 224,96,3
Plot 222,94,3
Plot 222,98,3
VWAIT 10

For i.b = 0 to 50
  FadePalette 3, 4, 1-i / 50
  DisplayPalette 0, 4
  VWAIT 2
Next

Cls 0

DisplayPalette 0, 3

;Loading
QAMIGA
Bitmap 0,320,224,5; db0
Bitmap 1,320,224,5; db1
Bitmap 2,320,16,5 ;hud 

Bitmap 3, 80, 256, 5 ;Bobs 
Bitmap 4, 32, 32, 3 ;World 1 
Bitmap 5, 48, 8, 2 ;Bullets Sprite 
Bitmap 6, 64, 81, 5 ;HUD

NPrint "Load Tiles..."
LoadBitMap 4, "assets/world1.iff"
; Load Tile
Use Bitmap 4
GetaShape 1,0,0,16,16
GetaShape 3,0,16,16,16
GetaShape 2,16,0,16,16
GetaShape 4,16,16,16,16

LoadBitMap 4, "assets/world2.iff"
; Load Tile
Use Bitmap 4
GetaShape 11,0,0,16,16
GetaShape 13,0,16,16,16
GetaShape 12,16,0,16,16
GetaShape 14,16,16,16,16

LoadBitMap 4, "assets/world3.iff"
; Load Tile
Use Bitmap 4
GetaShape 21,0,0,16,16
GetaShape 23,0,16,16,16
GetaShape 22,16,0,16,16
GetaShape 24,16,16,16,16

LoadBitMap 4, "assets/world4.iff"
; Load Tile
Use Bitmap 4
GetaShape 31,0,0,16,16
GetaShape 33,0,16,16,16
GetaShape 32,16,0,16,16
GetaShape 34,16,16,16,16

Free Bitmap 4





LoadBitMap 3, "assets/avatars.iff"

; Anim
;0 : shooted animation
;1-4 : walk animation

Use Bitmap 3
for j.b=0 to 3
  avatarIndex.w=j*50
  yIndex.w=j*64
  ;top anim
  GetaShape avatarIndex+50,64,yIndex+32,16,16 ;shot
  for i.b=0 to 3
    GetaShape avatarIndex+51+i,16*i,yIndex+32,16,16 ;walk
  next

  ;right anim
  GetaShape avatarIndex+60,64,yIndex+0,16,16 ;shot
  for i.b=0 to 3
    GetaShape avatarIndex+61+i,16*i,yIndex+0,16,16 ;walk
  next

  ;bottom anim
  GetaShape avatarIndex+70,64,yIndex+16,16,16 ;shot
  for i.b=0 to 3
    GetaShape avatarIndex+71+i,16*i,yIndex+16,16,16 ;walk
  next

  ;left anim
  for i.b=0 to 4
    CopyShape avatarIndex+60+i,avatarIndex+80+i:XFlip avatarIndex+80+i
  next

  ;dead
  GetaShape avatarIndex+90,0,yIndex+48,32,16 ;shot
next

Free BitMap 3

; Bullet Sprite
NPrint "Load Sprites..."
LoadBitMap 5, "assets/bullet.iff"
Use Bitmap 5
GetaShape 0,0,0,1,1
GetaSprite 0,0

;up & down
GetaShape 0,24,4,7,4
GetaSprite 7,0
YFlip 0
GetaSprite 1,0
GetaShape 0,35,0,2,4
GetaSprite 8,0
YFlip 0
GetaSprite 2,0
GetaShape 0,40,1,6,7
GetaSprite 9,0
YFlip 0
GetaSprite 3,0
;right & left
GetaShape 0,0,0,4,7
GetaSprite 4,0
XFlip 0
GetaSprite 10,0
GetaShape 0,10,3,4,2
GetaSprite 5,0
XFlip 0
GetaSprite 11,0
GetaShape 0,17,1,7,6
GetaSprite 6,0
XFlip 0
GetaSprite 12,0

Free BitMap 5

DEFTYPE .Level level1

NPrint "Load Map..."

dummy.b 
if ReadFile(0,"assets/level1.dat") 
  ReadMem 0,&dummy,1
  ReadMem 0,&dummy,1
  size.w=#mapSize
  ReadMem 0,&level1\map,size
Else
  NPrint "Error reading file."
EndIf
CloseFile 0

NPrint "Draw Map..."


Use Bitmap 0
for x.b=0 to (#mapWidth-1)
    for y.b=0 to (#mapHeight-1)
        tile=level1\map[x+y*#mapWidth]
        Block tile+(currentWorld-1)*10,x*16,y*16
    next
next
CopyBitMap 0,1 ; for double buffering

; HUD
NPrint "Init HUD..."
LoadBitMap 6, "assets/hud.iff"
Use Bitmap 6
for i.b=0 to 3
  for j.b=0 to 2
    GetaShape #ShapeIndexHUDAvatar+i+j*4,i*16,j*16,16,16
  Next
  GetaShape #ShapeIndexHUDPlayer+i,i*16,49,16,16
next
GetaShape #ShapeIndexHUDPlayer-1,0,65,16,16 ; cpu
Free Bitmap 6


; Palette
NPrint "Init Palette..."
InitPalette 0,32
InitPalette 1,32
LoadPalette 1, "assets/blower.pal"
PalRGB 1,0,0,0,0  ;Reset T0 color to black
;World Color
PaletteWorld{currentWorld}
;Sprite Colorbullets
for i=0 to 3
  PalRGB 1,16+i*4+1,0,0,0
  PalRGB 1,16+i*4+2,7,7,7  
  PalRGB 1,16+i*4+3,14,14,14  
next

InitPalette 2,32
LoadPalette 2, "assets/hud.pal" 
PalRGB 2,0,0,0,0  ;Reset T0 color to black

Buffer 0,16384
Buffer 1,16384

for i.b = 0 to 50
  Fadepalette 3, 0,1-i / 50
  DisplayPalette 0, 3
  vwait
next

;Init CopList
flags0.l = $05
flags1.l = $05
InitCopList 0,44,16,flags0,8,32,0
InitCopList 1,62,224,flags1,8,32,0



Free BitMap 7

Delay_ 50

Blitz

nbPlayer.b=4
Dim player.Player(nbPlayer)

;Init data
UsePath player(0)
\dead=0
\x=16
\y=16
\direction=1
\animIndex=0
\frameAnim=4
\frameCounter=0
\stepsize=3
\bullets=#bulletPerPlayer
\waitBullet=0
\joy=1
\avatar=0
\energy=#maxEnergy
\previousEnergy=#maxEnergy

UsePath player(1)
\dead=0
\x=288
\y=192
\direction=3
\animIndex=0
\frameAnim=4
\frameCounter=0
\stepsize=3
\bullets=#bulletPerPlayer
\waitBullet=0
\joy=0
\avatar=1
\energy=#maxEnergy
\previousEnergy=#maxEnergy


UsePath player(2)
\dead=0
\x=288
\y=16
\direction=3
\animIndex=0
\frameAnim=4
\frameCounter=0
\stepsize=3
\bullets=#bulletPerPlayer
\waitBullet=0
\joy=-1
\avatar=2
\energy=#maxEnergy
\previousEnergy=#maxEnergy


UsePath player(3)
\dead=0
\x=16
\y=192
\direction=1
\animIndex=0
\frameAnim=4
\frameCounter=0
\stepsize=3
\bullets=#bulletPerPlayer
\waitBullet=0
\joy=-1
\avatar=3
\energy=#maxEnergy
\previousEnergy=#maxEnergy

;Init HUD
Use Bitmap 2
Cls 0
for i=0 to (nbPlayer-1)
  avatar.b=player(i)\avatar
  cjoy.b=player(i)\joy
  If (cjoy >= 0 and cjoy < 2)
    cjoy=1-cjoy ; invert because of port 2 as joy port on amiga
  EndIf
  Block #ShapeIndexHUDPlayer+cjoy,avatar*64,0
  Block #ShapeIndexHUDAvatar+avatar,16+avatar*64,0
  Boxf 32+avatar*64,15-player(i)\energy,48+avatar*64,15,30
next

CreateDisplay 0,1

;hud
DisplayPalette 0,2
DisplayBitMap 0,2
;main
DisplayPalette 1,0
DisplayBitMap 1,0
DisplayPalette 1,1

Dim List bullets.Bullet(8)


db.b=0
Repeat
  VWait
  ; manage double buffering
  db=1-db
  Use Bitmap db

  
  a.w=0

  ;  First process dead so they are at the background
  For i=0 to (nbPlayer-1)
    UsePath player(i)
    If (\dead=1)
      a=50+\avatar*50+40
      Blit a,\x,\y 
    EndIf
  Next 

  UnBuffer db

  For i=0 to (nbPlayer-1)
  UsePath player(i)
  If (\dead <> 1)

    a=0
    If (\dead>0 OR \shot>0)
      ;Has been shoted anim
      If (\shot>0)
        a=50+\avatar*50+\direction*10
        \shot=\shot-1
      else
        If (\dead=2)
          \dead=\dead-1
          \x=\x-8
        EndIf
      EndIf
    Else
      currentJoy.b=\joy

      If (currentJoy >= 0  AND currentJoy < 2)
        ;Get Joy Button
        buttonOn=Joyb(currentJoy)
        ; Buffer Joy Button to avoid 2 bullet at the same time 
        If (\waitBullet>0)
          \waitBullet=\waitBullet-1
        EndIf
      EndIf
      ; Interaction
      If (buttonOn=0) ;Move or shoot
        If (currentJoy >= 0  AND currentJoy < 2)
          vJoyx.b=Joyx(currentJoy)
          vJoyy.b=Joyy(currentJoy)
          If (vJoyx <> 0 OR vJoyy <> 0)
            if vJoyx=1
              \direction=1
            Endif 
            if vJoyx=-1
              \direction=3
            EndIf
            if vJoyy=1
              \direction=2
            EndIf
            if vJoyy=-1
              \direction=0
            EndIf 
            \frameCounter=\frameCounter+1
            If (\frameCounter=\frameAnim)
              ; next move
              next_x.w=\x
              next_y.w=\y

              ;Wall Collision
              If (\direction=1)
                pa.w=Point(next_x+16,next_y+1)
                pb.w=Point(next_x+16,next_y+14)
              EndIf
              If (\direction=3)
                pa.w=Point(next_x-1,next_y+1)
                pb.w=Point(next_x-1,next_y+14)
              EndIf
              If (\direction=0)
                pa.w=Point(next_x+3,next_y-1)
                pb.w=Point(next_x+12,next_y-1)
              EndIf
              If (\direction=2)
                pa.w=Point(next_x+3,next_y+16)
                pb.w=Point(next_x+12,next_y+16)
              EndIf

              ;check colors in front of avatar
              paValid.b=(pa <> #wallColor1 AND pa <> #wallColor2)
              pbValid.b=(pb <> #wallColor1 AND pb <> #wallColor2)

              If (paValid=-1 AND pbValid=-1) ;Move
                \x=\x+vJoyx*\stepsize
                \y=\y+vJoyy*\stepsize
              EndIf
              If (paValid=-1 AND pbValid=0) ;Avoid obstacle
                if (\direction=0 OR \direction=2)
                  \x=\x-1
                Else
                  \y=\y-1
                EndIf
              EndIf
              If (paValid=0 AND pbValid=-1) ;Avoid obstacle
                if (\direction=0 OR \direction=2)
                  \x=\x+1
                Else
                  \y=\y+1
                EndIf
              EndIf
              ;Animation
              \frameCounter=0
              If (\animIndex = 3)
                \animIndex=0
              Else
                \animIndex=\animIndex+1
              Endif
            Endif
          Endif
        EndIf
      Else
        ; Fire
        \frameCounter=0
        \animIndex=0
        If (\waitBullet<=0)
          If (currentJoy >= 0  AND currentJoy < 2)
            If (buttonOn = 1)
              If (\bullets>0)
                If AddItem(bullets())
                  bullets()\direction=\direction
                  If (\direction=0)
                    bullets()\y=\y-4    
                  EndIf
                  If (\direction=1)
                    bullets()\x=\x+15 
                  EndIf
                  If (\direction=2)
                    bullets()\y=\y+15   
                  EndIf
                  If (\direction=3)
                    bullets()\x=\x-4   
                  EndIf
                  bullets()\y1=\y+6
                  bullets()\y2=\y+8
                  bullets()\x1=\x
                  bullets()\x2=\x+2
                  bullets()\animIndex=0
                  bullets()\player=i
                  bullets()\speed=#speedBullet
                  bullets()\init=#initAnimCount
                  bullets()\endLife=-1
                  bullets()\channel=2-\bullets
                  bullets()\srcAvatar=\avatar
                  \waitBullet=#waitBullet
                  \bullets=\bullets-1
                Endif
              Endif
            EndIf
          EndIf
        EndIf
      EndIf
      a=\avatar*50+51+\direction*10+\animIndex
    EndIf
    ;draw bobs
    BBlit 0,a,\x,\y 
  EndIf
  next

  ;Update and Draw Sprites
  USEPATH bullets()
  ResetList bullets()
  While NextItem(bullets())
    dot.b
    if (\endLife <> -1)
      \animIndex=2
      \endLife=\endLife-1
    Else
      If (\init > 0)
        \init=\init-1
        \animIndex=0
      Else
        If (\direction=0)
          \y=\y-\speed   
          dot.b=Point(\x2,\y-1)
        EndIf
        If (\direction=1)
          \x=\x+\speed 
          dot.b=Point(\x+6,\y2)
        EndIf
        If (\direction=2)
           \y=\y+\speed   
           dot.b=Point(\x2,\y+6)  
        EndIf
        If (\direction=3)
           \x=\x-\speed 
           dot.b=Point(\x-1,\y2)
        EndIf
        \animIndex=1
        ;Collision with wall
        If (dot=#wallColor1 OR dot=#wallColor2)
         bullets()\endLife=#endAnimCount
        EndIf
      EndIf
    EndIf
    xb.w
    yb.w
    If (\direction=0 OR \direction=2)
      yb=\y   
      If (\animIndex=1)
        xb=\x2
      Else
        xb=\x1
      EndIf
    EndIf
    If (\direction=1 OR \direction=3)
      xb=\x
      If (\animIndex=1)
        yb=\y2
      Else
        yb=\y1
      EndIf
    EndIf
    ;Collision with avatars
    if (\endLife = -1)
      If (dot>=#avatarColor1 AND dot<=#avatarColor2)
        ;Box xb-7,yb-7,xb-7+14,yb-7+14,8;debug
        For p=0 to (nbPlayer-1)
          If (\srcAvatar <> player(p)\avatar)
            If (player(p)\dead = 0) ; not dead
              ;Box player(p)\x,player(p)\y,player(p)\x+16,player(p)\y+16,9;debug
              If RectsHit(xb-7,yb-7,14,14,player(p)\x,player(p)\y,16,16) ; larger to void more calculus
                bullets()\endLife=#endAnimCount ; End bullet
                player(p)\previousEnergy=player(p)\energy
                player(p)\energy=player(p)\energy-#energyBulletImpact
                player(p)\shot=#shotAnim
                If (player(p)\energy <= 0)
                  player(p)\dead=2
                EndIf
              EndIf
            EndIf
          EndIf
        Next
      EndIf
    Endif
    ;Display
    DisplaySprite 1,1+\direction*3+\animIndex,xb,yb,\player*2+\channel
    If (\endLife=0)
      DisplaySprite 1,0,\x,\y1,\player*2+\channel
      player(\player)\bullets=player(\player)\bullets+1
      KillItem bullets()  
    Endif


    ;BitMapOutput 2 : Colour 2,0
    ;Locate 0,0
    ;Print player(0)\direction
    ;Locate 3,0
    ;Print player(0)\bullets
    ;Locate 6,0
    ;Print player(0)\waitBullet
  Wend

  ;HUD Update
  For p=0 to (nbPlayer-1)
    UsePath player(p)
    If (\energy <> \previousEnergy)
        ahud.b=0
        If (\energy < 10)
          ahud=1
        EndIf
        If (\energy < 4)
          ahud=2
        EndIf
        Use Bitmap 2
        Block #ShapeIndexHUDAvatar+ahud*4+\avatar,16+\avatar*64,0
        Boxf 32+\avatar*64,0,48+\avatar*64,15-\energy,0
        Boxf 32+\avatar*64,15-\energy,48+\avatar*64,15,30 
    EndIf
  Next
  
Until RawStatus($45) ; Escape pressed
Delay_ 50
AMIGA
NPrint "The End."
End
